<documents>
<document index="1">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/FUNDING.yml</source>
<document_content>
github: ['yusukebe', 'usualoma']

</document_content>
</document>
<document index="2">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/pull_request_template.md</source>
<document_content>
### The author should do the following, if applicable

- [ ] Add tests
- [ ] Run tests
- [ ] `bun run format:fix && bun run lint:fix` to format the code
- [ ] Add [TSDoc](https://tsdoc.org/)/[JSDoc](https://jsdoc.app/about-getting-started) to document the code

</document_content>
</document>
<document index="3">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/workflows/ci.yml</source>
<document_content>
name: ci
on:
  push:
    branches: [main, next]
  pull_request:
    branches: ['*']
    paths-ignore:
      - 'docs/**'
      - '.vscode/**'
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'

jobs:
  coverage:
    name: 'Coverage'
    runs-on: ubuntu-latest
    needs:
      - main
      - bun
      - fastly
      - node
      - deno
      - workerd
      - lambda
      - lambda-edge
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true
          path: ./coverage
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          directory: ./coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  main:
    name: 'Main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.1.39'
      - run: bun install
      - run: bun run format
      - run: bun run lint
      - run: bun run build
      - run: bun run test
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-main
          path: coverage/

  jsr-dry-run:
    name: "Checking if it's valid for JSR"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - uses: oven-sh/setup-bun@v2
      - run: bunx jsr publish --dry-run

  deno:
    name: 'Deno'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - run: env NAME=Deno deno test --coverage=coverage/raw/deno-runtime --allow-read --allow-env --allow-write --allow-net -c runtime-tests/deno/deno.json runtime-tests/deno
      - run: deno test -c runtime-tests/deno-jsx/deno.precompile.json --coverage=coverage/raw/deno-precompile-jsx runtime-tests/deno-jsx
      - run: deno test -c runtime-tests/deno-jsx/deno.react-jsx.json --coverage=coverage/raw/deno-react-jsx runtime-tests/deno-jsx
      - run: grep -R '"url":' coverage | grep -v runtime-tests | sed -e 's/.*file:..//;s/.,//' | xargs deno cache --unstable-sloppy-imports
      - run: deno coverage --lcov > coverage/deno-runtime-coverage-lcov.info
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-deno
          path: coverage/

  bun:
    name: 'Bun'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.1.39'
      - run: bun install
      - run: bun run test:bun
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-bun
          path: coverage/
  fastly:
    name: 'Fastly Compute'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: bun run build
      - run: bun run test:fastly
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-fastly
          path: coverage/

  node:
    name: 'Node.js v${{ matrix.node }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18.18.2', '20.x', '22.x']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: bun run build
      - run: bun run test:node
      - uses: actions/upload-artifact@v4
        if: matrix.node == '22.x'
        with:
          name: coverage-node
          path: coverage/

  workerd:
    name: 'workerd'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: bun run build
      - run: bun run test:workerd
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-workerd
          path: coverage/

  lambda:
    name: 'AWS Lambda'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: bun run build
      - run: bun run test:lambda
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-lambda
          path: coverage/

  lambda-edge:
    name: 'Lambda@Edge'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install --frozen-lockfile
      - run: bun run build
      - run: bun run test:lambda-edge
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-lambda-edge
          path: coverage/

  perf-measures-type-and-bundle-check-on-pr:
    name: 'Type & Bundle size Check on PR'
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - name: Performance measurement of type check
        run: |
            bun scripts/generate-app.ts
            bun tsc -p tsconfig.build.json --diagnostics | bun scripts/process-results.ts > diagnostics.json
        working-directory: perf-measures/type-check
      - name: Performance measurement of bundle check
        run: |
          bun run build
          bun perf-measures/bundle-check/scripts/check-bundle-size.ts > perf-measures/bundle-check/size.json
      - name: Run octocov
        uses: k1LoW/octocov-action@v1
        with:
          config: perf-measures/.octocov.perf-measures.yml
        env:
          OCTOCOV_CUSTOM_METRICS_BENCHMARK_BUNDLE: perf-measures/bundle-check/size.json
          OCTOCOV_CUSTOM_METRICS_BENCHMARK_TYPE: perf-measures/type-check/diagnostics.json

  perf-measures-type-and-bundle-check-on-main:
    name: 'Type & Bundle size Check on Main'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - name: Performance measurement of type check
        run: |
            bun scripts/generate-app.ts
            bun tsc -p tsconfig.build.json --diagnostics | bun scripts/process-results.ts > diagnostics.json
        working-directory: perf-measures/type-check
      - name: Performance measurement of bundle check
        run: |
          bun run build
          bun perf-measures/bundle-check/scripts/check-bundle-size.ts > perf-measures/bundle-check/size.json
      - name: Run octocov (main)
        uses: k1LoW/octocov-action@v1
        with:
          config: perf-measures/.octocov.perf-measures.main.yml
        env:
          OCTOCOV_GITHUB_REF: refs/heads/main
          OCTOCOV_CUSTOM_METRICS_BENCHMARK_BUNDLE: perf-measures/bundle-check/size.json
          OCTOCOV_CUSTOM_METRICS_BENCHMARK_TYPE: perf-measures/type-check/diagnostics.json

</document_content>
</document>
<document index="4">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/workflows/no-response.yml</source>
<document_content>
name: Close stale issues with "not bug" label

on:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write
  issues: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - name: Close stale issues with "not bug" label
        uses: actions/stale@v8
        with:
          days-before-stale: 7
          days-before-close: 2
          stale-issue-message: 'This issue has been marked as stale due to inactivity.'
          close-issue-message: 'Closing this issue due to inactivity.'
          exempt-issue-labels: ''
          stale-issue-label: 'stale'
          only-labels: 'not bug'
          operations-per-run: 30
          remove-stale-when-updated: true

</document_content>
</document>
<document index="5">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/workflows/release.yml</source>
<document_content>
name: release

on:
  push:
    tags:
      - '*'

jobs:
  jsr:
    name: publish-to-jsr
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Install deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - run: deno install --no-lock --allow-scripts
      - name: Publish to JSR
        run: deno run -A jsr:@david/publish-on-tag@0.1.4

</document_content>
</document>
<document index="6">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/ISSUE_TEMPLATE/1-bug-report.yml</source>
<document_content>
name: üêõ Bug Report
description: Report an issue that should be fixed
labels: [triage]
body:
  - type: markdown
    attributes:
      value: |
        Thank you for submitting a bug report. It helps make Hono better.

        If you need help or support using Hono, and are not reporting a bug, please ask questions in [our Discord](https://discord.gg/KMh2eNSdxV) or [GitHub Discussions](https://github.com/orgs/honojs/discussions).

        Please try to include as much information as possible.
  - type: input
    attributes:
      label: What version of Hono are you using?
      placeholder: 0.0.0
    validations:
      required: true
  - type: input
    attributes:
      label: What runtime/platform is your app running on? (with version if possible)
      placeholder: Cloudflare Workers, Deno, Bun, etc.
    validations:
      required: true
  - type: textarea
    attributes:
      label: What steps can reproduce the bug?
      description: Explain the bug and provide a code snippet that can reproduce it.
    validations:
      required: true
  - type: textarea
    attributes:
      label: What is the expected behavior?
  - type: textarea
    attributes:
      label: What do you see instead?
  - type: textarea
    attributes:
      label: Additional information
      description: Is there anything else you think we should know?

</document_content>
</document>
<document index="7">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/ISSUE_TEMPLATE/2-feature-request.yml</source>
<document_content>
name: üöÄ Feature Request
description: Suggest an idea, feature, or enhancement
labels: [enhancement]
body:
  - type: markdown
    attributes:
      value: |
        Thank you for submitting an idea. It helps make Hono better.

  - type: textarea
    attributes:
      label: What is the feature you are proposing?
      description: A clear description of what you want to happen.
    validations:
      required: true

</document_content>
</document>
<document index="8">
<source>/Users/josh/Documents/GitHub/honojs/hono/.github/ISSUE_TEMPLATE/config.yml</source>
<document_content>
blank_issues_enabled: true
contact_links:
  - name: ‚ùì Questions
    url: https://github.com/orgs/honojs/discussions
    about: Ask your questions on the GitHub Discussions.
  - name: üó£Ô∏è Discord
    url: https://discord.gg/KMh2eNSdxV
    about: Join our Discord server to chat.

</document_content>
</document>
</documents>
