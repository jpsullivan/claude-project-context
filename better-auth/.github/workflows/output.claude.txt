<documents>
<document index="1">
<source>/Users/josh/Documents/GitHub/better-auth/better-auth/.github/workflows/ci.yml</source>
<document_content>
name: CI

on: 
    pull_request:  
        types: 
          - opened
          - synchronize
    push:
      branches:
        - main
        - 'v**'
    merge_group: {}

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                    fetch-depth: 0

            - name: Cache turbo build setup
              uses: actions/cache@v4
              with:
                path: .turbo
                key: ${{ runner.os }}-turbo-${{ github.sha }}
                restore-keys: |
                  ${{ runner.os }}-turbo-

            - uses: pnpm/action-setup@v4

            - uses: actions/setup-node@v4
              with:
                node-version: 20.x
                registry-url: 'https://registry.npmjs.org'
                cache: pnpm
            
            - name: Install
              run: pnpm install

            - name: Build
              env:
                TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
                TURBO_TEAM: ${{ vars.TURBO_TEAM || github.repository_owner }}
                TURBO_REMOTE_ONLY: true
              run: pnpm build
            
            - name: Start Docker Containers
              run: |
                docker compose up -d
                # Wait for services to be ready (optional)
                sleep 10
            
            - name: Lint
              env:
                TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
                TURBO_TEAM: ${{ vars.TURBO_TEAM || github.repository_owner }}
                TURBO_REMOTE_ONLY: true
              run: pnpm lint
            
            - name: Test
              env:
                TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
                TURBO_TEAM: ${{ vars.TURBO_TEAM || github.repository_owner }}
              run: pnpm test

            - name: Typecheck
              env:
                TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
                TURBO_TEAM: ${{ vars.TURBO_TEAM || github.repository_owner }}
                TURBO_REMOTE_ONLY: true
              run: pnpm typecheck

            - name: Stop Docker Containers
              run: docker compose down
            
</document_content>
</document>
<document index="2">
<source>/Users/josh/Documents/GitHub/better-auth/better-auth/.github/workflows/discord.yml</source>
<document_content>
name: Discord

on:
  release:
      types: [published]
 
jobs:
    github-releases-to-discord:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Github Releases To Discord
          uses: SethCohen/github-releases-to-discord@v1.15.1
          with:
            webhook_url: ${{ secrets.WEBHOOK_URL }}
            color: "2105893"
            username: "Release Changelog"
            avatar_url: "https://cdn.discordapp.com/avatars/487431320314576937/bd64361e4ba6313d561d54e78c9e7171.png"
            content: "||@everyone||"
            footer_title: "Changelog"
            footer_icon_url: "https://cdn.discordapp.com/avatars/487431320314576937/bd64361e4ba6313d561d54e78c9e7171.png"
            footer_timestamp: true
            max_description: '4096'
            reduce_headings: true
</document_content>
</document>
<document index="3">
<source>/Users/josh/Documents/GitHub/better-auth/better-auth/.github/workflows/preview.yml</source>
<document_content>
name: Publish Any Commit
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: pnpm
      
      - name: Install
        run: pnpm install

      - name: Build
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ vars.TURBO_TEAM || github.repository_owner }}
          TURBO_REMOTE_ONLY: true
        run: pnpm build
          
      - run: pnpm dlx pkg-pr-new publish --pnpm ./packages/*
</document_content>
</document>
<document index="4">
<source>/Users/josh/Documents/GitHub/better-auth/better-auth/.github/workflows/release.yml</source>
<document_content>
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
            node-version: 20.x
            registry-url: 'https://registry.npmjs.org'

      - run: pnpm install
      
      - name: Build
        run: pnpm build

      - name: Determine npm tag
        id: determine_npm_tag
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if [[ "$TAG" =~ -(next|canary|beta|rc) ]]; then
            # Extract pre-release tag (e.g., beta, rc)
            NPM_TAG=${BASH_REMATCH[1]}
          else
            # Check if the commit is on the main branch
            git fetch origin main
            if git merge-base --is-ancestor "$GITHUB_SHA" origin/main; then
              NPM_TAG="latest"
            else
              echo "The tagged commit is not on the main branch."
              echo "::error ::Releases with the 'latest' npm tag must be on the main branch."
              exit 1
            fi
          fi
          echo "npm_tag=$NPM_TAG" >> $GITHUB_OUTPUT
          echo "Using npm tag: $NPM_TAG"

      - name: Publish to npm
        run: pnpm -r publish --access public --no-git-checks --tag ${{ steps.determine_npm_tag.outputs.npm_tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
</document_content>
</document>
</documents>
